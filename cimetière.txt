   /**
     * @Rest\Post(
     *    path = "/part",
     *    name = "app_part_create"
     * )
     * @ParamConverter("part", converter="fos_rest.request_body")
     * @ParamConverter("user", converter="fos_rest.request_body")
     * @ParamConverter("cmpt", converter="fos_rest.request_body")
     */
    public function createPart(Request $request,Partenaire $part,Utilisateur $user,Compte $cmpt,ValidatorInterface $validator, ConstraintViolationList $violations, UserPasswordEncoderInterface $passwordEncoder)
    {
        $this->denyAccessUnlessGranted('ROLE_SUPER_ADMIN', null, 'Vous n\'avez accés aux ajout de partenaire');
        
        $user->setPartenaire($part);
        $cmpt->setPartenaire($part);
        $part->setCreatedAt(new \DateTime());
        #$cmpt->setDateDepot(new \DateTime());
        $user->setRoles(["ROLE_SUPER_ADMIN_PARTENAIRE"]);
        $user->setStatut("Actif");
        $num = random_int(100000, 999999);
        $cmpt->setNumero($part->getId()+$cmpt->getId()+$num);
        $user->setPassword($passwordEncoder->encodePassword($user, $user->getPassword()));
       
        if (count($violations)) 
        {
            return $this->view($violations, Response::HTTP_BAD_REQUEST);
        }
        $errors = $validator->validate($user);
        if(count($errors))
        {
            return new Response($errors, 500, [
                'Content-Type' => 'application/json'
            ]);
        }
        $em = $this->getDoctrine()->getManager();
        
        $em->persist($cmpt);
        $em->persist($user);
        $em->persist($part);
        $em->flush();
         return  $this->handleView($this->view('Enregistrement réussi', Response::HTTP_CREATED));
       
    }


    $this->denyAccessUnlessGranted('ROLE_CAISSIER', null, 'Vous n\'êtes pas caissier');